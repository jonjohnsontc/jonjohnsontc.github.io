{"version":3,"file":"component---src-pages-stuff-index-js-6ae0f1732d3e8dd114c4.js","mappings":"wMAkBA,SAASA,EAASC,GAChB,OACE,gCACE,2BACE,uBAAKC,UAAS,iDACZ,uBAAKC,IAAKF,EAAMG,IAAKC,MAAM,WAE7B,2BACEH,UAAS,OACTI,wBAAyB,CAAEC,OAAQN,EAAMO,aAOpC,SAASC,EAAT,GAA0B,IACjCC,EADgC,EAARC,KACXC,kBAAkBF,MACrCA,EAAMG,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,YAAYC,KAAOF,EAAEC,YAAYC,KAAO,GAAK,KAErE,OAAsBC,EAAAA,EAAAA,UAAS,GAAxBC,EAAP,KAAYC,EAAZ,KAGMC,EAAM,SAAApB,GACV,IAAIqB,EAAO,0BAIX,OAHkB,MAAdrB,EAAMsB,OACRD,GAAO,mBAGP,0BACEE,QAASvB,EAAMuB,QACftB,UAAWoB,EACXG,IAAKxB,EAAMwB,IACXC,UAA6B,IAAnBzB,EAAMyB,UAA2B,MAE3C,4BACE,uBAAKvB,IAAKF,EAAMsB,UAMlBI,EAAO,WAGX,IAFA,IAAMC,EAAUlB,EAAMmB,OAClBC,EAAW,GAFE,WAGRC,GAELD,EAASC,GAASV,EADhBU,IAAUZ,EACU,CACpBO,UAAU,EACVF,QAAS,kBAAMJ,EAAOW,IACtBN,IAAKM,GAGe,CACpBL,UAAU,EACVF,QAAS,kBAAMJ,EAAOW,IACtBN,IAAKM,KAXFA,EAAQ,EAAGA,EAAQH,EAASG,IAAU,EAAtCA,GAeT,OAEE,uBACEC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,aAAc,SAGfL,IAODM,EACJ,gCACE,uBAAKlC,UAAS,yCACZ,uBAAKA,UAAS,8CACZ,0BACEwB,SAAkB,IAARP,GAAmB,KAC7BK,QAAS,kBAAMJ,EAAOD,EAAM,IAC5BjB,UAAS,0BAHX,OAQF,uBAAKA,UAAS,kBACZ,gBAACyB,EAAD,MACA,sBAAIzB,UAAS,gDACVQ,EAAMS,GAAKH,YAAYqB,OAE1B,gBAACrC,EAAD,CACEI,IAAKM,EAAMS,GAAKH,YAAYZ,IAC5BI,QAASE,EAAMS,GAAKmB,QAGxB,uBAAKpC,UAAS,UACZ,0BACEwB,SAAUP,IAAQT,EAAMmB,OAAS,GAAW,KAC5CL,QAAS,kBAAMJ,EAAOD,EAAM,IAC5BjB,UAAS,0BAHX,SAYR,MAAsB,oBAAXqC,OAoCFH,EAnCHG,OAAOC,YAAc,IAErB,gCACE,uBAAKtC,UAAS,yCACZ,uBAAKA,UAAS,kBACZ,gBAACyB,EAAD,MACA,sBAAIzB,UAAS,gDACVQ,EAAMS,GAAKH,YAAYqB,OAE1B,gBAACrC,EAAD,CACEI,IAAKM,EAAMS,GAAKH,YAAYZ,IAC5BI,QAASE,EAAMS,GAAKmB,QAGxB,uBAAKpC,UAAS,4CACZ,0BACEwB,SAAkB,IAARP,GAAmB,KAC7BK,QAAS,kBAAMJ,EAAOD,EAAM,IAC5BjB,UAAS,0BAHX,MAOA,0BACEwB,SAAUP,IAAQT,EAAMmB,OAAS,GAAW,KAC5CL,QAAS,kBAAMJ,EAAOD,EAAM,IAC5BjB,UAAS,0BAHX,SAgBLkC","sources":["webpack://gatsby-starter-hello-world/./src/pages/stuff/index.js"],"sourcesContent":["import { graphql } from \"gatsby\";\nimport React, { useState } from \"react\";\n\nexport const stuffQuery = graphql`\n  query StuffQuery {\n    allMarkdownRemark(filter: { frontmatter: { slug: { eq: \"/stuff/\" } } }) {\n      nodes {\n        frontmatter {\n          title\n          date\n          pic\n        }\n        html\n      }\n    }\n  }\n`;\n\nfunction Carousel(props) {\n  return (\n    <>\n      <div>\n        <div className={`is-flex is-justify-content-center stuff-image`}>\n          <img src={props.pic} width=\"500px\" />\n        </div>\n        <article\n          className={`mt-6`}\n          dangerouslySetInnerHTML={{ __html: props.content }}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default function Stuff({ data }) {\n  const nodes = data.allMarkdownRemark.nodes;\n  nodes.sort((a, b) => (a.frontmatter.date > b.frontmatter.date ? 1 : -1));\n\n  const [idx, setIdx] = useState(0);\n\n  // used to represent each `stuff` entry above the carousel\n  const Dot = props => {\n    let classes = `dot is-inline-flex mr-2`\n    if (props.icon == null) {\n      classes += ` dot-background`\n    }\n    return (\n      <button\n        onClick={props.onClick}\n        className={classes}\n        key={props.key}\n        disabled={props.disabled === true ? true : null}\n      >\n        <span>\n          <img src={props.icon}/>\n        </span>\n      </button>\n    );\n  };\n\n  const Dots = () => {\n    const numDots = nodes.length;\n    let dotArray = [];\n    for (let index = 0; index < numDots; index++) {\n      if (index === idx) {\n        dotArray[index] = Dot({\n          disabled: true,\n          onClick: () => setIdx(index),\n          key: index,\n        });\n      } else {\n        dotArray[index] = Dot({\n          disabled: false,\n          onClick: () => setIdx(index),\n          key: index,\n        });\n      }\n    }\n    return (\n      // For whatever reason, applying Bulma styles via classNames wasn't working\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginBottom: \"2rem\",\n        }}\n      >\n        {dotArray}\n      </div>\n    );\n  };\n\n  // This is the standard layout for 'Stuff', it's used in SSR\n  // and layouts > 800px wide\n  const allTheStuff = (\n    <>\n      <div className={`columns is-centered is-vcentered mt-6`}>\n        <div className={`column is-flex is-justify-content-flex-end`}>\n          <button\n            disabled={idx === 0 ? true : null}\n            onClick={() => setIdx(idx - 1)}\n            className={`stuff-button is-size-1`}\n          >\n            &lt; {/* Less than sign */}\n          </button>\n        </div>\n        <div className={`column is-half`}>\n          <Dots />\n          <h1 className={`title has-text-centered is-family-sans-serif`}>\n            {nodes[idx].frontmatter.title}\n          </h1>\n          <Carousel\n            pic={nodes[idx].frontmatter.pic}\n            content={nodes[idx].html}\n          />\n        </div>\n        <div className={`column`}>\n          <button\n            disabled={idx === nodes.length - 1 ? true : null}\n            onClick={() => setIdx(idx + 1)}\n            className={`stuff-button is-size-1`}\n          >\n            &gt; {/* Greater than sign */}\n          </button>\n        </div>\n      </div>\n    </>\n  );\n\n  if (typeof window !== \"undefined\") {\n    if (window.innerWidth <= 800) {\n      return (\n        <>\n          <div className={`columns is-centered is-vcentered mt-6`}>\n            <div className={`column is-half`}>\n              <Dots />\n              <h1 className={`title has-text-centered is-family-sans-serif`}>\n                {nodes[idx].frontmatter.title}\n              </h1>\n              <Carousel\n                pic={nodes[idx].frontmatter.pic}\n                content={nodes[idx].html}\n              />\n            </div>\n            <div className={`column is-flex is-justify-content-center`}>\n              <button\n                disabled={idx === 0 ? true : null}\n                onClick={() => setIdx(idx - 1)}\n                className={`stuff-button is-size-1`}\n              >\n                &lt; {/* Less than sign */}\n              </button>\n              <button\n                disabled={idx === nodes.length - 1 ? true : null}\n                onClick={() => setIdx(idx + 1)}\n                className={`stuff-button is-size-1`}\n              >\n                &gt; {/* Greater than sign */}\n              </button>\n            </div>\n          </div>\n        </>\n      );\n    }\n  } else {\n    return allTheStuff;\n  }\n\n  return allTheStuff;\n}\n"],"names":["Carousel","props","className","src","pic","width","dangerouslySetInnerHTML","__html","content","Stuff","nodes","data","allMarkdownRemark","sort","a","b","frontmatter","date","useState","idx","setIdx","Dot","classes","icon","onClick","key","disabled","Dots","numDots","length","dotArray","index","style","display","justifyContent","marginBottom","allTheStuff","title","html","window","innerWidth"],"sourceRoot":""}